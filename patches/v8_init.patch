diff --git a/fpdfsdk/BUILD.gn b/fpdfsdk/BUILD.gn
index dc8012ad3..12f82268c 100644
--- a/fpdfsdk/BUILD.gn
+++ b/fpdfsdk/BUILD.gn
@@ -70,6 +70,7 @@ source_set("fpdfsdk") {
     "fpdf_transformpage.cpp",
     "fpdf_view.cpp",
     "ipdfsdk_annothandler.h",
+    "fpdf_libs.cpp",
   ]
 
   configs += [ "../:pdfium_strict_config" ]
diff --git a/fpdfsdk/fpdf_libs.cpp b/fpdfsdk/fpdf_libs.cpp
new file mode 100644
index 000000000..18fb89dd2
--- /dev/null
+++ b/fpdfsdk/fpdf_libs.cpp
@@ -0,0 +1,33 @@
+#include "public/fpdfview.h"
+
+#include "libplatform/libplatform.h"
+#include "public/fpdf_formfill.h"
+#include "v8.h"
+
+extern "C"
+{
+
+FPDF_EXPORT FPDF_FORMHANDLE FPDF_CALLCONV
+FPDFDOC_InitFormFillEnvironmentEx(FPDF_DOCUMENT document,
+                                FPDF_FORMFILLINFO* formInfo,
+                                IPDF_JSPLATFORM* jsPlatform) {
+  formInfo->m_pJsPlatform = jsPlatform;
+  jsPlatform->m_pFormfillinfo = formInfo;
+  return FPDFDOC_InitFormFillEnvironment(document, formInfo);
+}
+
+FPDF_EXPORT void FPDF_CALLCONV FPDF_InitEmbeddedLibraries(const char* resourcePath)
+{
+    v8::V8::InitializeICUDefaultLocation(resourcePath);
+    v8::V8::InitializeExternalStartupData(resourcePath);
+    v8::Platform* platform = v8::platform::NewDefaultPlatform().release();
+    v8::V8::InitializePlatform(platform);
+    v8::V8::Initialize();
+
+    // By enabling predictable mode, V8 won't post any background tasks.
+    const char predictable_flag[] = "--predictable";
+    v8::V8::SetFlagsFromString(predictable_flag,
+                                static_cast<int>(strlen(predictable_flag)));
+}
+
+} // extern "C"
diff --git a/public/fpdf_libs.h b/public/fpdf_libs.h
new file mode 100644
index 000000000..aa58f9ede
--- /dev/null
+++ b/public/fpdf_libs.h
@@ -0,0 +1,42 @@
+#ifndef FPDF_LIBS_H_
+#define FPDF_LIBS_H_
+
+#include "fpdfview.h"
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*
+ * Function: FPDFDOC_InitFormFillEnvironment
+ *       Initialize form fill environment.
+ * Parameters:
+ *       document        -   Handle to document from FPDF_LoadDocument().
+ *       pFormFillInfo   -   Pointer to a FPDF_FORMFILLINFO structure.
+ *       pJsPlatform     -   Pointer to a IPDF_JSPLATFORM structure.
+ * Return Value:
+ *       Handle to the form fill module, or NULL on failure.
+ * Comments:
+ *       This function should be called before any form fill operation.
+ */
+FPDF_EXPORT FPDF_FORMHANDLE FPDF_CALLCONV
+FPDFDOC_InitFormFillEnvironmentEx(FPDF_DOCUMENT document,
+                                  FPDF_FORMFILLINFO* formInfo,
+                                  IPDF_JSPLATFORM* jsPlatform);
+
+// Function: FPDF_InitEmbeddedLibraries
+//          Initialize embedded libraries (v8, iuctl) included in pdfium
+// Parameters:
+//          resourcePath - a path to v8 resources (snapshot_blob.bin, icudtl.dat, ...)
+// Return value:
+//          None.
+// Comments:
+//          This function must be called before calling FPDF_InitLibrary()
+//          if v8 suppport is enabled
+FPDF_EXPORT void FPDF_CALLCONV FPDF_InitEmbeddedLibraries(const char* resourcePath);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif // FPDF_LIBS_H_
